"""empty message

Revision ID: 96a2554995e7
Revises: 7da8a3c31e50
Create Date: 2020-10-14 07:06:54.866738

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '96a2554995e7'
down_revision = '7da8a3c31e50'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('pet')
    # op.drop_table('owner')
    # op.drop_table('alert')
    # ### end Alembic commands ###
    pass


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alert',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('lost_point', geoalchemy2.types.Geography(geometry_type='POINT', srid=4326, from_text='ST_GeogFromText', name='geography'), autoincrement=False, nullable=True),
    sa.Column('pet_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('date_registered', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('date_finish', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['pet_id'], ['pet.id'], name='alert_pet_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='alert_pkey')
    )
    op.create_table('owner',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('owner_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=14), autoincrement=False, nullable=True),
    sa.Column('f_user', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('g_user', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('photo', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('firebase_token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='owner_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('pet',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('breed', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('color', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('size', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('age', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('weight', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('sex', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('diseases', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('medicates', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('photo', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('date_registered', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['owner.id'], name='pet_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='pet_pkey')
    )
    # ### end Alembic commands ###
